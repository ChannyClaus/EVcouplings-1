# Configuration rules:
# 1) Global settings override settings for stages
# 2) Outputs of a stage are merged into "global" and fed into input of subsequent stages
# 3) All settings are explicitly specified here. No hidden defaults in code.
# 4) Each stage is also passed the databases and tools sections

batch:
#    _b0.75:
#       align: {domain_threshold: 0.75, sequence_threshold: 0.75}
#    _b0.3:
#       align: {domain_threshold: 0.3, sequence_threshold: 0.3}
environment:
    engine: lsf
    queue: mcore
    cores: 2
    memory: 15000
    time: 48:0
    configuration: 
        - source activate evcouplings_env
    
pipeline: protein_monomer
stages:
    - align
    - couplings
    - compare
    - mutate
    - fold

global:
    sequence_id:
    sequence_file: 
    region:
    cpu:
    prefix:

align:
    protocol: standard
    prefix:
    sequence_id:
    sequence_file:
    region:
    first_index: 1

    use_bitscores: True
    domain_threshold: 0.5
    sequence_threshold: 0.5
    iterations: 5
    database: uniref100
    
    compute_num_effective_seqs: False
    theta: 0.8
    
    seqid_filter:
    minimum_sequence_coverage: 50
    minimum_column_coverage: 70
    
    extract_annotation: True
    cpu:
    nobias: False
    reuse_alignment: True
    checkpoints_hmm: False
    checkpoints_ali: False

# alternative protocol: reuse existing alignment
#    protocol: existing
#    prefix: ./existing/existing_bpt1
#    # alignment needs to contain region in form SEQID/start-end, or first_index must be set
#    input_alignment: ./infer/PF00014_full.txt
#    sequence_id: BPT1_BOVIN
#    first_index:
#    compute_num_effective_seqs: False
#    theta: 0.8
#    seqid_filter:
#    minimum_sequence_coverage: 50
#    minimum_column_coverage: 70
#    extract_annotation: True

    
couplings:
    protocol: standard
    
    prefix: 
    alignment_file: 
    focus_sequence: 
    focus_mode: True
    segments:

    theta: 0.8
    iterations: 100
    alphabet: 
    ignore_gaps: True
    lambda_J: 0.01
    lambda_J_times_Lq: True
    lambda_h: 0.01    
    lambda_group:
    scale_clusters:
    save_model: True
    reuse_ecs: True
    cpu: 1
    
compare:
    protocol: standard
    prefix:
    sequence_id:
    ec_file:
    target_sequence_file:

    # if by_alignment is False, will use pdb_ids parameter below
    by_alignment: True
    sequence_file:
    first_index:
    region:
    alignment_min_overlap: 20
    use_bitscores: True
    domain_threshold: 0.5
    sequence_threshold: 0.5
    
    # leave this parameter empty to use all PDB
    # structures for given sequence_id, otherwise
    # will be limited to the given IDs
    pdb_ids:
    
    # compare to structures
    max_num_structures: 10
    max_num_hits: 25
    compare_multimer: True

    # Comparison and plotting settings
    
    # set atom_filter to "CA" to compute C_alpha distances instead of minimum atom distances
    atom_filter:
    distance_cutoff: 5
    min_sequence_distance: 6
        
    plot_probability_cutoffs: [0.90, 0.99]
    # any of the following can also be floats (fraction of L)
    plot_lowest_count: 0.05
    plot_highest_count: 1.0
    plot_increase: 0.05
    boundaries: union
    draw_secondary_structure: True

mutate:
    protocol: standard
    prefix:
    model_file:
    # predict the following file (mutants like A102V or A102V,K199W in column "mutant", comma-separated)
    mutation_dataset_file:

fold:
    protocol: standard
    engine: cns_dgsa
    folding_config_file:
    prefix:

    ec_file:
    target_sequence_file:
    segments:
    cut_to_alignment_region: True

    sec_struct_method: psipred
    reuse_sec_struct: True
    sec_struct_file:
    filter_sec_struct_clashes: True
    remapped_pdb_files:

    min_sequence_distance: 6
    fold_probability_cutoffs: [0.90, 0.99]
    # any of the following can also be floats (fraction of L)
    fold_lowest_count: 0.5
    fold_highest_count: 1.3
    fold_increase: 0.05
    num_models: 10
    cpu:

databases:
    uniprot: /groups/marks/databases/jackhmmer/uniprot/uniprot_2016_07.fasta
    uniref100: /groups/marks/databases/jackhmmer/uniref100/uniref100_2017_01.fasta
    uniref90: /groups/marks/databases/jackhmmer/uniref90/uniref90_2017_01.fasta
    pdb_seqres: /groups/marks/databases/pdb_2015_02_20/pdb_seqres.txt
    sequence_download_url: http://www.uniprot.org/uniprot/{}.fasta
    pdb_mmtf_dir:
    sifts_mapping_table: /groups/marks/databases/SIFTS/pdb_chain_uniprot_plus.csv
    sifts_sequence_db: /groups/marks/databases/SIFTS/pdb_chain_uniprot_plus.fa

tools:
    jackhmmer: /groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/jackhmmer
    hhfilter: /groups/marks/pipelines/evcouplings/software/hh-suite/bin/hhfilter
    plmc: /groups/marks/pipelines/evcouplings/software/plmc/bin/plmc
    psipred: /groups/marks/software/runpsipred
    cns: /groups/marks/pipelines/evcouplings/software/cns_solve_1.21/intel-x86_64bit-linux/bin/cns
    maxcluster: /groups/marks/pipelines/evcouplings/software/maxcluster64bit
